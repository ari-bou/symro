# SETS AND PARAMETERS
# --------------------------------------------------------------------------------------------------
# beginregion
param CUT_COUNT default 0;
set CUTS = 1..CUT_COUNT;
param ETA_LB default -1000000;
param ETA_UB default 1000000;
param OBJ_STORED{ct in CUTS} default 0;
param IS_FEASIBLE{ct in CUTS} default 0;
param NODE_stored{m in MATERIALS, t in TIMEPERIODS, s in SCENARIOS, ct in CUTS} default 0;
param lambda_INLET_FLOW_RATE{r in RAW_MATERIALS, t in TIMEPERIODS, s in SCENARIOS, ct in CUTS} default 0;
param lambda_RAW_MAT_FLOW_RATE{r in RAW_MATERIALS, t in TIMEPERIODS, s in SCENARIOS, ct in CUTS} default 0;
param lambda_PROFIT_CALC{t in TIMEPERIODS, s in SCENARIOS, ct in CUTS} default 0;
# endregion 


# VARIABLES
# --------------------------------------------------------------------------------------------------
# beginregion
var ETA;
var GBD_F{s in SCENARIOS, ct in CUTS} = (((sum {t in TIMEPERIODS} ((sum {r in RAW_MATERIALS} (PROBABILITY[s] * COST[r,s] * NODE[r,t,s])) + (sum {r in RAW_MATERIALS} 0.01 * PROBABILITY[s] * COST[r,s] * (NODE[r,t,s] ^ 2)))) - (sum {t in TIMEPERIODS} ((sum {r in RAW_MATERIALS} (PROBABILITY[s] * COST[r,s] * NODE_stored[r,t,s,ct])) + (sum {r in RAW_MATERIALS} 0.01 * PROBABILITY[s] * COST[r,s] * (NODE_stored[r,t,s,ct] ^ 2))))));
var GBD_G_0{r in RAW_MATERIALS, t in TIMEPERIODS, s in SCENARIOS, ct in CUTS} = ((-1 * NODE[r,t,s]) - (-1 * NODE_stored[r,t,s,ct]));
var GBD_G_1{r in RAW_MATERIALS, t in TIMEPERIODS, s in SCENARIOS, ct in CUTS} = ((-1 * NODE[r,t,s]) - (-1 * NODE_stored[r,t,s,ct]));
var GBD_G_2{t in TIMEPERIODS, s in SCENARIOS, ct in CUTS} = ((-1 * (-1 * (sum {r in RAW_MATERIALS} (COST[r,s] * NODE[r,t,s])))) - (-1 * (-1 * (sum {r in RAW_MATERIALS} (COST[r,s] * NODE_stored[r,t,s,ct])))));
# endregion 


# OBJECTIVES
# --------------------------------------------------------------------------------------------------
# beginregion
minimize MASTER_OBJ: ETA;
# endregion 


# CONSTRAINTS
# --------------------------------------------------------------------------------------------------
# beginregion
GBD_OPT_CUT{ct in CUTS: IS_FEASIBLE[ct] == 1}: ETA >= OBJ_STORED[ct] + (sum {s in SCENARIOS} (((sum {t in TIMEPERIODS} ((sum {r in RAW_MATERIALS} (PROBABILITY[s] * COST[r,s] * NODE[r,t,s])) + (sum {r in RAW_MATERIALS} 0.01 * PROBABILITY[s] * COST[r,s] * (NODE[r,t,s] ^ 2)))) - (sum {t in TIMEPERIODS} ((sum {r in RAW_MATERIALS} (PROBABILITY[s] * COST[r,s] * NODE_stored[r,t,s,ct])) + (sum {r in RAW_MATERIALS} 0.01 * PROBABILITY[s] * COST[r,s] * (NODE_stored[r,t,s,ct] ^ 2))))))) + (sum {r in RAW_MATERIALS, t in TIMEPERIODS, s in SCENARIOS} lambda_INLET_FLOW_RATE[r,t,s,ct] * ((-1 * NODE[r,t,s]) - (-1 * NODE_stored[r,t,s,ct]))) + (sum {r in RAW_MATERIALS, t in TIMEPERIODS, s in SCENARIOS} lambda_RAW_MAT_FLOW_RATE[r,t,s,ct] * ((-1 * NODE[r,t,s]) - (-1 * NODE_stored[r,t,s,ct]))) + (sum {t in TIMEPERIODS, s in SCENARIOS} lambda_PROFIT_CALC[t,s,ct] * ((-1 * (-1 * (sum {r in RAW_MATERIALS} (COST[r,s] * NODE[r,t,s])))) - (-1 * (-1 * (sum {r in RAW_MATERIALS} (COST[r,s] * NODE_stored[r,t,s,ct]))))));
GBD_FBL_CUT{ct in CUTS: IS_FEASIBLE[ct] == 0}: 0 >= OBJ_STORED[ct] + (sum {r in RAW_MATERIALS, t in TIMEPERIODS, s in SCENARIOS} lambda_INLET_FLOW_RATE[r,t,s,ct] * ((-1 * NODE[r,t,s]) - (-1 * NODE_stored[r,t,s,ct]))) + (sum {r in RAW_MATERIALS, t in TIMEPERIODS, s in SCENARIOS} lambda_RAW_MAT_FLOW_RATE[r,t,s,ct] * ((-1 * NODE[r,t,s]) - (-1 * NODE_stored[r,t,s,ct]))) + (sum {t in TIMEPERIODS, s in SCENARIOS} lambda_PROFIT_CALC[t,s,ct] * ((-1 * (-1 * (sum {r in RAW_MATERIALS} (COST[r,s] * NODE[r,t,s])))) - (-1 * (-1 * (sum {r in RAW_MATERIALS} (COST[r,s] * NODE_stored[r,t,s,ct]))))));
ETA_BOUNDS: ETA_LB <= ETA <= ETA_UB;
# endregion 

