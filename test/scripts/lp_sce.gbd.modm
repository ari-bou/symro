# SETS AND PARAMETERS
# --------------------------------------------------------------------------------------------------
# beginregion
param CUT_COUNT default 0;
set CUTS = 1..CUT_COUNT;
param ETA_LB default -100000;
param ETA_UB default 100000;
param OBJ_STORED{ct in CUTS} default 0;
param IS_FEASIBLE{ct in CUTS} default 0;
param y_stored{s in S, ct in CUTS} default 0;
param lambda_CON1{s in S, ct in CUTS} default 0;
# endregion 


# VARIABLES
# --------------------------------------------------------------------------------------------------
# beginregion
var ETA;
var GBD_F{s in S, ct in CUTS} = ((((-10 * p[s] * y[s])) - ((-10 * p[s] * y_stored[s,ct]))));
var GBD_G_0{s in S, ct in CUTS} = (((p[s] * y[s])) - ((p[s] * y_stored[s,ct])));
# endregion 


# OBJECTIVES
# --------------------------------------------------------------------------------------------------
# beginregion
minimize MASTER_OBJ: ETA;
# endregion 


# CONSTRAINTS
# --------------------------------------------------------------------------------------------------
# beginregion
GBD_OPT_CUT{ct in CUTS: IS_FEASIBLE[ct] == 1}: ETA >= OBJ_STORED[ct] + (sum {s in S} ((((-10 * p[s] * y[s])) - ((-10 * p[s] * y_stored[s,ct]))))) + (sum {s in S} lambda_CON1[s,ct] * (((p[s] * y[s])) - ((p[s] * y_stored[s,ct]))));
GBD_FBL_CUT{ct in CUTS: IS_FEASIBLE[ct] == 0}: 0 >= OBJ_STORED[ct] + (sum {s in S} lambda_CON1[s,ct] * (((p[s] * y[s])) - ((p[s] * y_stored[s,ct]))));
ETA_BOUNDS: ETA_LB <= ETA <= ETA_UB;
# endregion 

